@using ERP.DataAccess.DTOs.BankBranch
@using ERP.DataAccess.DTOs.Basic_Setup
@using ERP.DataAccess.DTOs.Buyer
@using ERP.DataAccess.DTOs.LC_Open
@using ERP.DataAccess.Domains
@using Newtonsoft.Json
@{
    ViewData["Title"] = "CNF Payment";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var lcFileList = (List<LCTransaction>)ViewBag.LCFileList;
    var collectionModeList = (List<CollectionMode>)ViewBag.CollectionModeList;
    var collectionModeJson = JsonConvert.SerializeObject(collectionModeList);

    var orgAccList = (List<OrganizationAccountListDto>)ViewBag.OrganizationBankAccountList;
    var orgAccListModeJson = JsonConvert.SerializeObject(orgAccList);
}

<style type="text/css">
    .row {
        margin-top: 10px !important;
    }

    .row {
        margin-top: 10px !important;
    }

    .card {
        border: 1px solid #1890ff !important;
        border-radius: var(--bs-card-border-radius);
        box-shadow: var(--bs-card-box-shadow);
    }

        .card .card-header {
            border-bottom: 1px solid #1890ff !important;
        }

    .table > thead {
        border: 1px solid #1890ff !important;
    }

    .table > tbody {
        border: 1px solid #1890ff !important;
    }

    .table > tfoot {
        border: 1px solid #1890ff !important;
    }

    hr {
        border-top: 2px solid #1890ff;
    }

    /* .d-none {
        display: none;
    } */
</style>
<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <h5>Clearing & Forwarding (CNF) Payment</h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="dt-responsive table-responsive">
                            <table class="table table-striped table-bordered nowrap">
                                <thead>
                                    <tr>
                                        <th class="text-center">LC Number</th>
                                        <th class="text-center">CNF Weight (Ton)</th>
                                        <th class="text-center">CNF Amount</th>
                                        <th class="text-center">CNF Date</th>
                                        <th class="text-center">Action</th>
                                    </tr>
                                </thead>
                                <tbody id="tblClearingAndForwarding">
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <label style="color:#1890ff; font-weight:800;">CNF Payment List</label>
                <hr />
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-floating mb-3">
                            <span type="text" class="form-control" id="spnLCNumbers"></span>
                            <label for="spnLCNumbers">LC Numbers</label>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-floating mb-3">
                            <span type="text" class="form-control" id="spnTotalPayableAmount"></span>
                            <label for="spnTotalPayableAmount">Total Amount</label>
                        </div>
                    </div>
                </div>
                <hr />
                <div class="row">
                    <div class="col-md-12">
                        <div class="dt-responsive table-responsive">
                            <table class="table table-striped table-bordered nowrap">
                                <thead>
                                    <tr id="tableHeader">
                                        <th class="text-center">Collection Mode</th>
                                        <th class="text-center cheque-only d-none">Organization Bank Account</th>
                                        <th class="text-center cheque-only d-none">Cheque No</th>
                                        <th class="text-center cheque-only d-none">Cheque Date</th>
                                        <th class="text-center">Amount</th>
                                        <th class="text-center">Action</th>
                                    </tr>
                                </thead>
                                <tbody id="tblPayment">
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="row mt-4">
                    <div class="col-md-12 text-center">
                        <button type="button" id="btnSubmit" data-CMFId="" data-id="0" class="btn btn-primary px-4 py-2">Save</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript" src="~/assets/js/Jquery.js"></script>
<script type="text/javascript">
    const collectionModes = @Html.Raw(collectionModeJson);
    const accountList = @Html.Raw(orgAccListModeJson);
    let rowDataArray = [];
    $(document).ready(function () {
        $("input").on("input", function () {
            $(this).removeClass("is-invalid").addClass("is-valid");
        });
        GetNonPaidCnfPaymentList();
        let totalAmount = 0;

        $(document).on("click", ".btn-pay", function () {
            const $btn = $(this);
            const $row = $btn.closest("tr");
            const id = $btn.data("id");

            // Add to data-CMFId
            const $submitBtn = $("#btnSubmit");
            let ids = $submitBtn.attr("data-CMFId").split(',').filter(x => x);
            if (!ids.includes(String(id))) {
                ids.push(id);
            }
            $submitBtn.attr("data-CMFId", ids.join(','));

            // Get data
            const lcNumber = $row.find("td:eq(0)").text().trim();
            const cnfAmount = parseFloat($row.find("td:eq(2)").text().trim());

            // Highlight the row
            $row.css("background-color", "#f8d7da");

            // Append LC Number
            const $lcNumbers = $("#spnLCNumbers");
            const currentLCs = $lcNumbers.text().trim().split(", ").filter(x => x);
            if (!currentLCs.includes(lcNumber)) {
                currentLCs.push(lcNumber);
            }
            $lcNumbers.text(currentLCs.join(", "));

            // Add amount
            totalAmount += isNaN(cnfAmount) ? 0 : cnfAmount;
            $("#spnTotalPayableAmount").text(totalAmount.toFixed(2));

            // Toggle buttons
            $btn.hide();
            $btn.after(`<a class="btn btn-danger btn-sm btn-delete" data-id="${id}" data-amount="${cnfAmount}" data-lc="${lcNumber}">Delete</a>`);
        });

        $(document).on("click", ".btn-delete", function () {
            const $btn = $(this);
            const $row = $btn.closest("tr");
            const id = $btn.data("id");

            // Remove from data-CMFId
            const $submitBtn = $("#btnSubmit");
            let ids = $submitBtn.attr("data-CMFId").split(',').filter(x => x && x !== String(id));
            $submitBtn.attr("data-CMFId", ids.join(','));

            const cnfAmount = parseFloat($btn.data("amount"));
            const lcNumber = String($btn.data("lc")).trim();

            // Unhighlight row
            $row.css("background-color", "");

            // Remove LC Number
            const $lcNumbers = $("#spnLCNumbers");
            let currentLCs = $lcNumbers.text().trim().split(", ")
                .map(x => x.trim())
                .filter(x => x && x !== lcNumber);
            $lcNumbers.text(currentLCs.join(", "));

            // Subtract amount
            totalAmount -= isNaN(cnfAmount) ? 0 : cnfAmount;
            $("#spnTotalPayableAmount").text(totalAmount.toFixed(2));

            // Toggle buttons
            $row.find(".btn-pay").show();
            $btn.remove();
        });
      
        addRow();
    });

    function GetNonPaidCnfPaymentList() {
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetNonPaidCnfPaymentList", "ClearingAndFordwingCNF")',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (res) {
                if (res.status) {
                    const tbody = $("#tblClearingAndForwarding");
                    tbody.empty();
                    console.log("Response Data:", res.data);
                    $.each(res.data, function (i, item) {
                        const row = `
                            <tr>
                                <td class="text-center" data-lcId=${item.lcId}>${item.lcNumber}</td>
                                <td class="text-center">${item.cnfWeight}</td>
                                <td class="text-center">${item.cnfAmount}</td>
                                <td class="text-center">${item.cnfDate}</td>
                                <td class="text-center">
                                    <a class="btn btn-success btn-sm btn-pay" data-id="${item.id}">Pay</a>
                                </td>
                            </tr>`;
                        tbody.append(row);
                    });
                } else {
                    alert("Error: " + res.Message);
                }
            },
            error: function (xhr, status, error) {
                alert("AJAX Error: " + error);
            }
        });
    }

    function addRow() {
        const row = document.createElement("tr");

        let collectionModeOptions = '<option value="">-- Select Collection Mode --</option>';
        collectionModes.forEach(m => {
            collectionModeOptions += `<option value="${m.Id}">${m.CollectionModeName}</option>`;
        });

        let orgAccountOptions = '<option value="">-- Select Bank Account --</option>';
        accountList.forEach(m => {
            orgAccountOptions += `<option value="${m.Id}">${m.BankName}, ${m.BankAccountNo}</option>`;
        });

        row.innerHTML = `
            <td>
                <select class="form-control collection-mode-dropdown">
                    ${collectionModeOptions}
                </select>
            </td>
            <td class="cheque-only d-none"><select class="form-control cmbBankAccount">${orgAccountOptions}</select></td>
            <td class="cheque-only d-none"><input type="text" class="form-control cheque-no" /></td>
            <td class="cheque-only d-none"><input type="date" class="form-control cheque-date" /></td>
            <td><input type="number" class="form-control amount" /></td>
            <td class="text-center">
                <button type="button" class="btn btn-success btn-sm" onclick="saveRow(this)">+</button>
                <button type="button" class="btn btn-danger btn-sm" onclick="removeRow(this)"><i class="ti ti-trash"></i></button>
            </td>
        `;

        document.getElementById("tblPayment").appendChild(row);
    }
    
    $(document).on('change','.collection-mode-dropdown', function (e) {
        var optionSelected = $("option:selected", this);
        var valueSelected = this.value;
        if (valueSelected === "2") {
            $("#tableHeader th").removeClass('d-none');
            $("#tblPayment td").removeClass('d-none');
        } 
        // else {
        //    $("#tableHeader th").addClass('d-none');
        //    $("#tblPayment td").addClass('d-none');
        // }
    });


    function saveRow(btn) {
        const row = btn.closest("tr");
        const collectionModeId = row.querySelector(".collection-mode-dropdown").value;
        const bankAccountId = row.querySelector(".cmbBankAccount")?.value || null;
        const chequeNo = row.querySelector(".cheque-no")?.value || null;
        const chequeDate = row.querySelector(".cheque-date")?.value || null;
        const amount = parseFloat(row.querySelector(".amount")?.value) || 0;

        if (!collectionModeId || amount <= 0) {
            Swal.fire("Error!", "Please select collection mode and enter a valid amount.", "error");
            return;
        }

        const rowObj = {
            collectionModeId: parseInt(collectionModeId),
            bankAccountId: bankAccountId ? parseInt(bankAccountId) : null,
            chequeNo: chequeNo,
            chequeDate: chequeDate,
            amount: amount
        };

        rowDataArray.push(rowObj);

        btn.disabled = true;
        row.querySelectorAll("input, select").forEach(el => el.disabled = true);

        // 🔧 ADD THIS LINE TO APPEND NEW ROW
        addRow();
    }


</script>
