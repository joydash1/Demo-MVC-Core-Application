@using ERP.DataAccess.DTOs.Basic_Setup
@model BorderDto
@{
    ViewData["Title"] = "Border";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var borderList = (List<BorderDto>)ViewBag.BorderList;
}

<style type="text/css">
    .row {
        margin-top: 10px !important;
    }

    .card {
        border: 1px solid #1890ff !important;
        border-radius: var(--bs-card-border-radius);
        box-shadow: var(--bs-card-box-shadow);
    }

        .card .card-header {
            border-bottom: 1px solid #1890ff !important;
        }

    table.table-bordered.dataTable thead tr:first-child th, table.table-bordered.dataTable thead tr:first-child {
        border: 1px solid #1890ff !important;
    }

    .table > tbody {
        border: 11px solid #1890ff !important;
    }
</style>

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <h5>Border</h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-floating mb-0">
                            <input type="text" class="form-control" id="txtBorderName" placeholder="Border Name">
                            <label for="txtBorderName">Border Name</label>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 text-center">
                        <button type="button" id="btnSubmit" data-id="0" class="btn btn-light-primary">Save</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-12">
        <div class="card">
            <div class="card-header">
                <h5>Border List</h5>
            </div>
            <div class="card-body">
                <div class="dt-responsive table-responsive">
                    <table id="autofill" class="table table-striped table-bordered nowrap">
                        <thead>
                            <tr>
                                <th class="text-center">Border Name</th>
                                <th class="text-center">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (borderList.Any())
                            {
                                @foreach (var border in borderList)
                                {
                                    <tr>
                                        <td class="text-center">@border.BorderName</td>
                                        <td class="text-center">
                                            <button class="btn btn-sm btn-warning edit-btn" data-id="@border.Id"><i class="ti ti-edit"></i></button>
                                            <button class="btn btn-sm btn-danger delete-btn" data-id="@border.Id"><i class="ti ti-trash"></i></button>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="2" class="text-center">No records found.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript" src="~/assets/js/Jquery.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $(document).on("click", "#btnSubmit", function (e) {
            e.preventDefault();

            var isValid = true;

            function validateField(selector) {
                var inputField = $(selector);
                var value = inputField.val().trim();

                if (value === "") {
                    inputField.addClass("is-invalid").removeClass("is-valid");
                    isValid = false;
                } else {
                    inputField.addClass("is-valid").removeClass("is-invalid");
                }
            }

            validateField("#txtBorderName", "Please enter border name");

            if (!isValid) {
                Swal.fire({
                    icon: "error",
                    title: "Oops...",
                    text: "Please fill in all required fields."
                });
            } else {
                var Id = $("#btnSubmit").attr("data-id");
                var BorderName = $("#txtBorderName").val();
                var formData = new FormData();
                formData.append("Id", Id);
                formData.append("BorderName", BorderName);
                $.ajax({
                    url: '@Url.Action("InsertUpdateBorder", "BasicSetup")',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        if (response && response.status === true) {
                            Swal.fire("Success!", response.message, "success").then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire("Error!", "There is something wrong. Please try again.", "error");
                        }
                    },
                    error: function () {
                        Swal.fire("Error!", "Something went wrong. Please try again.", "error");
                    }
                });
            }
        });

        $("input").on("input", function () {
            $(this).removeClass("is-invalid").addClass("is-valid");
        });

        $(document).on("click", ".delete-btn", function () {
            var Id = $(this).attr("data-id");
            var formData = new FormData();
            formData.append("Id", Id);

            Swal.fire({
                title: "Are you sure?",
                text: "Do you really want to delete this border? This action cannot be undone.",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085d6",
                confirmButtonText: "Yes, delete it!",
                cancelButtonText: "Cancel"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("DeleteBorderById", "BasicSetup")',
                        type: 'POST',
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function (response) {
                            if (response && response.status === true) {
                                Swal.fire("Deleted!", response.message, "success").then(() => {
                                    location.reload();
                                });
                            } else {
                                Swal.fire("Error!", "Failed to delete the record.", "error");
                            }
                        },
                        error: function () {
                            Swal.fire("Error!", "Something went wrong. Please try again.", "error");
                        }
                    });
                }
            });
        });

        $(document).on("click", ".edit-btn", function () {
            var Id = $(this).attr("data-id");
            var formData = new FormData();
            formData.append("Id", Id);

            $.ajax({
                url: '@Url.Action("GetBorderById", "BasicSetup")',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    if (response && response.status === true) {
                        var d = response.data[0];
                        $("#btnSubmit").attr("data-id", d.id);
                        $("#txtBorderName").val(d.borderName);
                    } else {
                        Swal.fire("Error!", "Failed to fetch border details.", "error");
                    }
                },
                error: function () {
                    Swal.fire("Error!", "Something went wrong. Please try again.", "error");
                }
            });
        });
    });
</script>

